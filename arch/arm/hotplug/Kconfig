# Kconfig file for hotplugs

config ALUCARD_HOTPLUG
	bool "Enable alucard-hotplug cpu hotplug driver"
	default y
	help
	  Generic Alucard-hotplug cpu hotplug driver for ARM SOCs

config BLU_PLUG
	bool "Dynamic hotplug driver"
	depends on HOTPLUG_CPU
	default n
	help
	  The Dynamic hotplug driver automatically online/offline CPUs proportional to system load.

config BRICKED_HOTPLUG
	bool "Enable kernel based mpdecision"
	depends on MSM_SMP && MSM_DCVS
	default n
	help
	  This enables kernel based multi core control.
	  (up/down hotplug based on load)

config ASMP
	bool "Multi-core automatic hotplug support"
        depends on SMP && HOTPLUG_CPU
        default n
        help
          Automatically hotplugs the multiple cpu cores on and off
          based on cpu load and suspend state

config DYNAMIC_HOTPLUG
	bool "Enable dynamic-hotplug cpu hotplug driver"
	default y
	help
	  Generic Dynamic-hotplug cpu hotplug driver for ARM SOCs

config INTELLI_PLUG
	bool "Enable intelli-plug cpu hotplug driver"
	default n
	help
	  Generic Intelli-plug cpu hotplug driver for ARM SOCs

config LAZYPLUG
	bool "Conservative hotplugging for generic devices"
	default n
	help
	  This enables the conservative hotplugging, lazyplug by arter97
	  based on intelli_plug. Refer to the comments for more info.

config MSM_HOTPLUG
	bool "MSM hotplug driver"
	depends on HOTPLUG_CPU
	default y
	help
	  The MSM hotplug driver controls on-/offlining of additional cores based
	  on current cpu load.

config MSM_SLEEPER
	bool "CPU hotplug driver"
	default y
	help
	  CPU hotplug driver

config SKATER_HOTPLUG
	bool "A highly customizable hotplug, built for battery & performance"
	default n
	help
	  This hotplug is based off of AutoSMP, it has many customizations to
	  ensure that you can either tune it for performance, or insane battery life.
	  I've taken parts of Intelliplug, MSM_Hotplug, and will be adding more to this.

config STATE_HELPER
        bool "State Helper"
	depends on STATE_NOTIFIER

config THUNDER_PLUG
      bool "Enable plugging down/up of cores using powersuspend"
      help
       This driver uses powersuspend to take down the cpu cores
       on a octa core device. Tuned to work on a dual core device.

config ZEN_DECISION
	bool "Zen Decision: MSM Userspace Handler"
	depends on SMP && FB
	default y
	help
	  MSM/Qcomm devices have multiple userspace applications that handle
	  CPU hotplugging and frequency operations.

	  ZenDecision is a "handler" to account for behavior caused by
	  disabling some of these services.

	  For example, If MPDecision is disabled and MSM-Thermal_Engine is 
	  enabled in the userspace. Situations where CPUs go offline but never
	  come back online occur. ZenDecision handles the situation of CPUs
	  never coming online when they are supposed.
  
	  ZenDecision ensures all CPUs are online when they are supposed to be by:
	  - Enable all CPUs when screen comes on after wake_wait_delay
	  - Ignore all CPU_UP operations when battery level is <= 15% to respect
	    decisions of MSMThermal.

	  Userspace tunables for ZenDecision (/sys/kernel/zen_decision):
	  - enabled (0 or 1): Enable or disable the driver.
	  - wake_wait_time (0-60000): How long to wait before executing CPU_UP work.
	  - bat_threshold_ignore (0-100, 0=disabled): Don't do any CPU_UP work up to
	     this battery charge level.

	  WARNING: ZenDecision is not a direct replacement for any of the MSM userspace
	  services. It is simply designed to "handle" specific behaviors that are caused
	  by disabling these services.

	  If unsure, say N.
